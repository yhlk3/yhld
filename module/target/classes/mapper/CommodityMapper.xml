<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.module.commodity.mapper.CommodityMapper">

    <insert id="insert" parameterType="com.example.module.commodity.entity.Commodity"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO commodity (
        <if test="commodity.title != null and commodity.title != ''">title,</if>
        <if test="commodity.price != null">price,</if>
        <if test="commodity.location != null and commodity.location != ''">location,</if>
        <if test="commodity.details != null and commodity.details != ''">details,</if>
        <if test="commodity.images != null and commodity.images != ''">images,</if>
        <if test="commodity.createTime != null">create_time,</if>
        <if test="commodity.updateTime != null">update_time,</if>
        <if test="commodity.categoryId != null">category_id,</if>
        is_deleted
        ) VALUES (
        <if test="commodity.title != null and commodity.title != ''" >#{commodity.title},</if>
        <if test="commodity.price != null">#{commodity.price},</if>
        <if test="commodity.location != null and commodity.location != ''">#{commodity.location},</if>
        <if test="commodity.details != null and commodity.details != ''">#{commodity.details},</if>
        <if test="commodity.images != null and commodity.images != ''">#{commodity.images},</if>
        <if test="commodity.createTime != null">#{commodity.createTime},</if>
        <if test="commodity.updateTime != null">#{commodity.updateTime},</if>
        <if test="commodity.categoryId != null">#{commodity.categoryId},</if>
        #{commodity.isDeleted}
        )
    </insert>

    <update id="update" parameterType="com.example.module.commodity.entity.Commodity">
        UPDATE commodity
        <set>
            <if test="commodity.title != null and commodity.title != ''">title = #{commodity.title},</if>
            <if test="commodity.price != null">price = #{commodity.price},</if>
            <if test="commodity.location != null and commodity.location != ''">location = #{commodity.location},</if>
            <if test="commodity.details != null and commodity.details != ''">idetails = #{commodity.details},</if>
            <if test="commodity.images != null and commodity.images != ''">images = #{commodity.images},</if>
            <if test="commodity.createTime != null">create_time = #{commodity.createTime},</if>
            <if test="commodity.updateTime != null">update_time = #{commodity.updateTime},</if>
            <if test="commodity.isDeleted != null">is_deleted = #{commodity.isDeleted},</if>
            <if test="commodity.categoryId != null">category_id = #{commodity.categoryId},</if>
        </set>
        WHERE id = #{commodity.id}
    </update>

    <select id="findByKeywordAndPage" resultType="com.example.module.commodity.entity.Commodity">
        SELECT * FROM commodity
        WHERE is_deleted = 0
        <if test="keyword != null and keyword != ''">
            AND (
            title LIKE CONCAT('%', #{keyword} ,'%')
            <if test="ids != null and ids != ''">
                OR category_id IN (${ids})
            </if>
            )
        </if>
        ORDER BY id
        LIMIT #{offset}, #{pageSize}
    </select>
    <select id="getCommoditiesWithCategory" resultType="com.example.module.entity.CommodityCategoryDTO">
        SELECT
        c.id AS id,
        c.title AS title,
        c.images AS images,
        c.price AS price,
        c.location AS location,
        cat.name AS categoryName
        FROM commodity c
        LEFT JOIN category cat ON c.category_id = cat.id AND cat.is_deleted = 0
        WHERE c.is_deleted = 0
        <if test="keyword != null and keyword != ''">
            AND (
            c.title LIKE CONCAT('%', #{keyword} ,'%') OR cat.name LIKE CONCAT('%', #{keyword} ,'%')
            )
        </if>
        ORDER BY c.id
        LIMIT #{offset}, #{pageSize}
    </select>
    <select id="findCommoditiesByCategoryIds" resultType="com.example.module.commodity.entity.Commodity">
        SELECT * FROM commodity
        WHERE is_deleted = 0
        AND category_id IN (${categoryIds})
        ORDER BY id
        LIMIT #{offset}, #{pageSize}
    </select>

</mapper>